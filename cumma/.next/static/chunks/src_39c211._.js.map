{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } "],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/loading-button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Loader2 } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps } from \"@/components/ui/button\"\n\ninterface LoadingButtonProps extends ButtonProps {\n  loading?: boolean\n}\n\nconst LoadingButton = React.forwardRef<HTMLButtonElement, LoadingButtonProps>(\n  ({ className, children, disabled, loading = false, ...props }, ref) => {\n    return (\n      <Button\n        className={cn(className)}\n        disabled={disabled || loading}\n        ref={ref}\n        {...props}\n      >\n        {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n        {children}\n      </Button>\n    )\n  }\n)\nLoadingButton.displayName = \"LoadingButton\"\n\nexport { LoadingButton } "],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AAFA;;;;;;AASA,MAAM,8BAAgB,8JAAM,UAAU,MACpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACE,6LAAC,qIAAA,CAAA,SAAM;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;QACd,UAAU,YAAY;QACtB,KAAK;QACJ,GAAG,KAAK;;YAER,yBAAW,6LAAC,oNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;YAC9B;;;;;;;AAGP;;AAEF,cAAc,WAAW,GAAG"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/checkbox.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox } "],"names":[],"mappings":";;;;AAAA;AAGA;AAFA;AACA;;;;;;AAGA,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,wKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/lib/validations/auth.ts"],"sourcesContent":["import * as z from \"zod\"\n\nexport const serviceProviderSignUpSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z\n    .string()\n    .min(8, \"Password must be at least 8 characters\")\n    .regex(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n      \"Password must contain at least one uppercase letter, one lowercase letter, one number and one special character\"\n    ),\n  serviceProviderType: z.enum([\n    \"Incubator\",\n    \"Accelerator\",\n    \"Institution/University\",\n    \"Private Coworking Space\",\n    \"Community Space\",\n    \"Cafe\"\n  ], {\n    required_error: \"Please select a service provider type\",\n  }),\n  serviceName: z.string().min(1, \"Service name is required\"),\n  address: z.string().min(1, \"Address is required\"),\n  city: z.string().min(1, \"City is required\"),\n  stateProvince: z.string().min(1, \"State/Province is required\"),\n  zipPostalCode: z.string().min(1, \"ZIP/Postal Code is required\"),\n  primaryContact1Name: z.string().min(1, \"Primary contact name is required\"),\n  primaryContact1Designation: z.string().min(1, \"Primary contact designation is required\"),\n  primaryContactNumber: z.string().min(1, \"Primary contact number is required\"),\n  contact2Name: z.string().optional(),\n  contact2Designation: z.string().optional(),\n  alternateContactNumber: z.string().optional(),\n  alternateEmailId: z.string().email(\"Please enter a valid email address\").optional(),\n  websiteUrl: z.string().url(\"Please enter a valid URL\").optional(),\n  terms: z.literal(true, {\n    errorMap: () => ({ message: \"You must accept the terms and conditions\" }),\n  }),\n})\n\nexport const startupSignUpSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z\n    .string()\n    .min(8, \"Password must be at least 8 characters\")\n    .regex(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n      \"Password must contain at least one uppercase letter, one lowercase letter, one number and one special character\"\n    ),\n  startupName: z.string().min(1, \"Startup name is required\"),\n  contactName: z.string().min(1, \"Contact name is required\"),\n  contactNumber: z.string().min(1, \"Contact number is required\"),\n  terms: z.literal(true, {\n    errorMap: () => ({ message: \"You must accept the terms and conditions\" }),\n  }),\n})\n\nexport const signInSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n  rememberMe: z.boolean().optional(),\n}) "],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,8BAA8B,wIAAE,MAAM,CAAC;IAClD,OAAO,wIAAE,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,wIACP,MAAM,GACN,GAAG,CAAC,GAAG,0CACP,KAAK,CACJ,wEACA;IAEJ,qBAAqB,wIAAE,IAAI,CAAC;QAC1B;QACA;QACA;QACA;QACA;QACA;KACD,EAAE;QACD,gBAAgB;IAClB;IACA,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,SAAS,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,MAAM,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,eAAe,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,eAAe,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,qBAAqB,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACvC,4BAA4B,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9C,sBAAsB,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACxC,cAAc,wIAAE,MAAM,GAAG,QAAQ;IACjC,qBAAqB,wIAAE,MAAM,GAAG,QAAQ;IACxC,wBAAwB,wIAAE,MAAM,GAAG,QAAQ;IAC3C,kBAAkB,wIAAE,MAAM,GAAG,KAAK,CAAC,sCAAsC,QAAQ;IACjF,YAAY,wIAAE,MAAM,GAAG,GAAG,CAAC,4BAA4B,QAAQ;IAC/D,OAAO,wIAAE,OAAO,CAAC,MAAM;QACrB,UAAU,IAAM,CAAC;gBAAE,SAAS;YAA2C,CAAC;IAC1E;AACF;AAEO,MAAM,sBAAsB,wIAAE,MAAM,CAAC;IAC1C,OAAO,wIAAE,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,wIACP,MAAM,GACN,GAAG,CAAC,GAAG,0CACP,KAAK,CACJ,wEACA;IAEJ,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,eAAe,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,OAAO,wIAAE,OAAO,CAAC,MAAM;QACrB,UAAU,IAAM,CAAC;gBAAE,SAAS;YAA2C,CAAC;IAC1E;AACF;AAEO,MAAM,eAAe,wIAAE,MAAM,CAAC;IACnC,OAAO,wIAAE,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,YAAY,wIAAE,OAAO,GAAG,QAAQ;AAClC"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/lib/actions/auth.ts"],"sourcesContent":["'use server'\n\nimport { z } from 'zod'\nimport { startupSignUpSchema, serviceProviderSignUpSchema } from '@/lib/validations/auth'\nimport connectDB from '@/lib/db'\nimport User from '@/models/User'\nimport Startup from '@/models/Startup'\nimport ServiceProvider from '@/models/ServiceProvider'\nimport mongoose from 'mongoose'\nimport crypto from 'crypto'\n\n// Function to generate random alphanumeric ID\nfunction generateAuthProviderId(length: number = 24): string {\n  return crypto.randomBytes(length)\n    .toString('base64')\n    .replace(/[^a-zA-Z0-9]/g, '')\n    .slice(0, length);\n}\n\nexport async function registerStartup(data: z.infer<typeof startupSignUpSchema>) {\n  try {\n    console.log('Connecting to database...')\n    await connectDB()\n    \n    // Ensure database connection is established\n    if (!mongoose.connection.db) {\n      throw new Error('Database connection not established')\n    }\n    console.log('Connected to database')\n\n    // Start a session for transaction\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      // Check if user already exists\n      console.log('Checking for existing user...')\n      const existingUser = await User.findOne({ email: data.email }).session(session)\n      if (existingUser) {\n        throw new Error('User already exists')\n      }\n      console.log('No existing user found')\n\n      // Create user using Mongoose model\n      console.log('Creating user...')\n      const user = await User.create([{\n        email: data.email,\n        password: data.password, // Will be hashed by the pre-save middleware\n        userType: 'startup',\n        authProvider: 'local',\n        authProviderId: generateAuthProviderId(),\n        isEmailVerified: false,\n      }], { session })\n      \n      const userId = user[0]._id\n      console.log('User created:', userId)\n\n      // Create startup using Mongoose model\n      console.log('Creating startup profile...')\n      const startup = await Startup.create([{\n        userId: userId,\n        startupName: data.startupName,\n        contactName: data.contactName,\n        contactNumber: data.contactNumber,\n      }], { session })\n      \n      console.log('Startup profile created:', startup[0]._id)\n\n      // Commit the transaction\n      await session.commitTransaction()\n      console.log('Transaction committed successfully')\n\n      return { success: true }\n    } catch (error) {\n      // If an error occurred, abort the transaction\n      await session.abortTransaction()\n      throw error\n    } finally {\n      // End the session\n      session.endSession()\n    }\n  } catch (error: any) {\n    console.error('Registration error:', error)\n    return { error: error.message }\n  }\n}\n\nexport async function registerServiceProvider(data: z.infer<typeof serviceProviderSignUpSchema>) {\n  try {\n    console.log('Connecting to database...')\n    await connectDB()\n    \n    // Ensure database connection is established\n    if (!mongoose.connection.db) {\n      throw new Error('Database connection not established')\n    }\n    console.log('Connected to database')\n\n    // Start a session for transaction\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      // Check if user already exists\n      console.log('Checking for existing user...')\n      const existingUser = await User.findOne({ email: data.email }).session(session)\n      if (existingUser) {\n        throw new Error('User already exists')\n      }\n      console.log('No existing user found')\n\n      // Create user using Mongoose model\n      console.log('Creating user...')\n      const user = await User.create([{\n        email: data.email,\n        password: data.password, // Will be hashed by the pre-save middleware\n        userType: 'Service Provider',\n        authProvider: 'local',\n        authProviderId: generateAuthProviderId(),\n        isEmailVerified: false,\n      }], { session })\n      \n      const userId = user[0]._id\n      console.log('User created:', userId)\n\n      // Create service provider using Mongoose model\n      console.log('Creating service provider profile...')\n      const serviceProvider = await ServiceProvider.create([{\n        userId: userId,\n        serviceProviderType: data.serviceProviderType,\n        serviceName: data.serviceName,\n        address: data.address,\n        city: data.city,\n        stateProvince: data.stateProvince,\n        zipPostalCode: data.zipPostalCode,\n        primaryContact1Name: data.primaryContact1Name,\n        primaryContact1Designation: data.primaryContact1Designation,\n        primaryContactNumber: data.primaryContactNumber,\n        primaryEmailId: data.email,\n        features: [],\n        ...(data.contact2Name && { contact2Name: data.contact2Name }),\n        ...(data.contact2Designation && { contact2Designation: data.contact2Designation }),\n        ...(data.alternateContactNumber && { alternateContactNumber: data.alternateContactNumber }),\n        ...(data.alternateEmailId && { alternateEmailId: data.alternateEmailId }),\n        ...(data.websiteUrl && { websiteUrl: data.websiteUrl }),\n      }], { session })\n      \n      console.log('Service provider profile created:', serviceProvider[0]._id)\n\n      // Commit the transaction\n      await session.commitTransaction()\n      console.log('Transaction committed successfully')\n\n      return { success: true }\n    } catch (error) {\n      // If an error occurred, abort the transaction\n      await session.abortTransaction()\n      throw error\n    } finally {\n      // End the session\n      session.endSession()\n    }\n  } catch (error: any) {\n    console.error('Registration error:', error)\n    return { error: error.message }\n  }\n} "],"names":[],"mappings":";;;;;;IAmBsB;IAoEA"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/app/%28auth%29/sign-up/startup/page.tsx"],"sourcesContent":["\"use client\"\n\nimport Link from 'next/link'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { signIn } from 'next-auth/react'\nimport { useRouter } from 'next/navigation'\n\nimport { Input } from '@/components/ui/input'\nimport { LoadingButton } from '@/components/ui/loading-button'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { startupSignUpSchema } from '@/lib/validations/auth'\nimport { registerStartup } from '@/lib/actions/auth'\n\ntype FormData = z.infer<typeof startupSignUpSchema>\n\nexport default function StartupSignUp() {\n  const router = useRouter()\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    setValue,\n  } = useForm<FormData>({\n    resolver: zodResolver(startupSignUpSchema),\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      const result = await registerStartup(data)\n      \n      if (result.error) {\n        throw new Error(result.error)\n      }\n\n      // Sign in the user\n      const signInResult = await signIn('credentials', {\n        email: data.email,\n        password: data.password,\n        redirect: false,\n      })\n\n      if (signInResult?.error) {\n        throw new Error(signInResult.error)\n      }\n\n      // Redirect to dashboard\n      router.push('/startup/dashboard')\n    } catch (error) {\n      console.error('Registration error:', error)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-semibold\">Create an account</h1>\n        <p className=\"mt-2 text-sm text-muted-foreground\">\n          Create an account to explore more features on Cumma.\n        </p>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Input\n            {...register('email')}\n            type=\"email\"\n            placeholder=\"Ex: weebsitestudio@gmail.com\"\n            className=\"h-12\"\n          />\n          {errors.email && (\n            <p className=\"text-sm text-destructive\">{errors.email.message}</p>\n          )}\n        </div>\n        <div className=\"space-y-2\">\n          <Input\n            {...register('password')}\n            type=\"password\"\n            placeholder=\"Ex: Abcd@12345\"\n            className=\"h-12\"\n          />\n          {errors.password && (\n            <p className=\"text-sm text-destructive\">{errors.password.message}</p>\n          )}\n        </div>\n        <div className=\"space-y-2\">\n          <Input\n            {...register('startupName')}\n            type=\"text\"\n            placeholder=\"Startup Name\"\n            className=\"h-12\"\n          />\n          {errors.startupName && (\n            <p className=\"text-sm text-destructive\">{errors.startupName.message}</p>\n          )}\n        </div>\n        <div className=\"space-y-2\">\n          <Input\n            {...register('contactName')}\n            type=\"text\"\n            placeholder=\"Contact Name\"\n            className=\"h-12\"\n          />\n          {errors.contactName && (\n            <p className=\"text-sm text-destructive\">{errors.contactName.message}</p>\n          )}\n        </div>\n        <div className=\"space-y-2\">\n          <Input\n            {...register('contactNumber')}\n            type=\"tel\"\n            placeholder=\"Contact Number / WhatsApp Number\"\n            className=\"h-12\"\n          />\n          {errors.contactNumber && (\n            <p className=\"text-sm text-destructive\">{errors.contactNumber.message}</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox\n          id=\"terms\"\n          onCheckedChange={(checked) => {\n            if (checked) setValue('terms', true)\n          }}\n        />\n        <label\n          htmlFor=\"terms\"\n          className=\"text-sm text-muted-foreground\"\n        >\n          By Signing up, you agree to our terms of service and policy.\n        </label>\n      </div>\n      {errors.terms && (\n        <p className=\"text-sm text-destructive\">{errors.terms.message}</p>\n      )}\n\n      <LoadingButton type=\"submit\" className=\"w-full h-12\" loading={isSubmitting}>\n        Create Account <span className=\"ml-2\">→</span>\n      </LoadingButton>\n\n      <div className=\"text-center text-sm\">\n        Already have an account?{' '}\n        <Link href=\"/sign-in\" className=\"font-medium text-primary hover:underline\">\n          Go to Sign in\n        </Link>\n      </div>\n    </form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}