{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } "],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label } "],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/form.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea } "],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,8JAAM,UAAU,MAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/image-upload.tsx"],"sourcesContent":["'use client'\n\nimport { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { X } from 'lucide-react'\nimport Image from 'next/image'\nimport { cn } from '@/lib/utils'\n\ninterface ImageUploadProps {\n  onChange: (value: string[]) => void\n  onRemove: (value: string) => void\n  value: string[]\n  disabled?: boolean\n}\n\nexport function ImageUpload({\n  onChange,\n  onRemove,\n  value,\n  disabled,\n}: ImageUploadProps) {\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // TODO: Implement actual image upload to cloud storage\n      // For now, we'll use a placeholder URL\n      const urls = acceptedFiles.map(\n        (file) => URL.createObjectURL(file)\n      )\n      onChange(urls)\n    },\n    [onChange]\n  )\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif'],\n    },\n    maxFiles: 1,\n    disabled,\n  })\n\n  return (\n    <div>\n      <div\n        {...getRootProps()}\n        className={cn(\n          'relative cursor-pointer rounded-lg border-2 border-dashed border-gray-300 p-6 transition-colors',\n          isDragActive && 'border-primary bg-primary/5',\n          disabled && 'cursor-not-allowed opacity-75'\n        )}\n      >\n        <input {...getInputProps()} />\n        <div className=\"flex flex-col items-center justify-center gap-2 text-center\">\n          <div className=\"text-sm text-gray-600\">\n            {isDragActive ? (\n              <p>Drop the image here</p>\n            ) : (\n              <p>Drag & drop an image here, or click to select</p>\n            )}\n          </div>\n          <div className=\"text-xs text-gray-500\">\n            Supported formats: PNG, JPG, JPEG, GIF\n          </div>\n        </div>\n      </div>\n\n      {/* Preview */}\n      {value.map((url) => (\n        <div\n          key={url}\n          className=\"relative mt-4 h-40 w-40 rounded-lg border border-gray-200\"\n        >\n          <Image\n            fill\n            src={url}\n            alt=\"Upload\"\n            className=\"rounded-lg object-cover\"\n          />\n          {!disabled && (\n            <button\n              type=\"button\"\n              onClick={() => onRemove(url)}\n              className=\"absolute -right-2 -top-2 rounded-full bg-rose-500 p-1 text-white shadow-sm\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          )}\n        </div>\n      ))}\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AAHA;AACA;;;AAJA;;;;;;AAeO,SAAS,YAAY,EAC1B,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,QAAQ,EACS;;IACjB,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2CACvB,CAAC;YACC,uDAAuD;YACvD,uCAAuC;YACvC,MAAM,OAAO,cAAc,GAAG;wDAC5B,CAAC,OAAS,IAAI,eAAe,CAAC;;YAEhC,SAAS;QACX;0CACA;QAAC;KAAS;IAGZ,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE;QAChE;QACA,QAAQ;YACN,WAAW;gBAAC;gBAAQ;gBAAQ;gBAAS;aAAO;QAC9C;QACA,UAAU;QACV;IACF;IAEA,qBACE,6LAAC;;0BACC,6LAAC;gBACE,GAAG,cAAc;gBAClB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mGACA,gBAAgB,+BAChB,YAAY;;kCAGd,6LAAC;wBAAO,GAAG,eAAe;;;;;;kCAC1B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACZ,6BACC,6LAAC;8CAAE;;;;;yDAEH,6LAAC;8CAAE;;;;;;;;;;;0CAGP,6LAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;YAO1C,MAAM,GAAG,CAAC,CAAC,oBACV,6LAAC;oBAEC,WAAU;;sCAEV,6LAAC,gIAAA,CAAA,UAAK;4BACJ,IAAI;4BACJ,KAAK;4BACL,KAAI;4BACJ,WAAU;;;;;;wBAEX,CAAC,0BACA,6LAAC;4BACC,MAAK;4BACL,SAAS,IAAM,SAAS;4BACxB,WAAU;sCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;mBAfZ;;;;;;;;;;;AAsBf;GA7EgB;;QAkBwC,2KAAA,CAAA,cAAW;;;KAlBnD"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-form.tsx"],"sourcesContent":["'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { useState } from 'react'\nimport { ImageUpload } from '@/components/ui/image-upload'\n\n// Base schema for all facility types\nconst baseSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n})\n\n// Type-specific schemas\nconst facilitySchemas = {\n  'individual-cabin': baseSchema.extend({\n    totalCabins: z.number().min(1, 'Must have at least 1 cabin'),\n    availableCabins: z.number().min(0, 'Cannot be negative'),\n    pricePerMonth: z.number().min(0, 'Price cannot be negative'),\n  }),\n  'coworking-spaces': baseSchema.extend({\n    totalSeats: z.number().min(1, 'Must have at least 1 seat'),\n    availableSeats: z.number().min(0, 'Cannot be negative'),\n    pricePerDay: z.number().min(0, 'Price cannot be negative'),\n  }),\n  'meeting-rooms': baseSchema.extend({\n    capacity: z.number().min(1, 'Must have at least 1 person capacity'),\n    pricePerHour: z.number().min(0, 'Price cannot be negative'),\n    amenities: z.array(z.string()),\n  }),\n  // Add schemas for other facility types...\n}\n\ntype FacilityFormProps = {\n  type: string\n  onSubmit: (data: any) => void\n}\n\nexport function FacilityForm({ type, onSubmit }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const schema = facilitySchemas[type as keyof typeof facilitySchemas] || baseSchema\n\n  const form = useForm<z.infer<typeof schema>>({\n    resolver: zodResolver(schema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n    },\n  })\n\n  const handleSubmit = (values: z.infer<typeof schema>) => {\n    onSubmit({ ...values, images })\n  }\n\n  const renderTypeSpecificFields = () => {\n    switch (type) {\n      case 'individual-cabin':\n        return (\n          <>\n            <FormField\n              control={form.control}\n              name=\"totalCabins\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Total Cabins</FormLabel>\n                  <FormControl>\n                    <Input type=\"number\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"availableCabins\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Available Cabins</FormLabel>\n                  <FormControl>\n                    <Input type=\"number\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"pricePerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Price per Month (₹)</FormLabel>\n                  <FormControl>\n                    <Input type=\"number\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </>\n        )\n      // Add cases for other facility types...\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          {renderTypeSpecificFields()}\n        </div>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Facility Images</FormLabel>\n          <ImageUpload\n            value={images}\n            onChange={(urls) => {\n              setImages(urls)\n              form.setValue('images', urls)\n            }}\n            onRemove={(url) => {\n              const newImages = images.filter((image) => image !== url)\n              setImages(newImages)\n              form.setValue('images', newImages)\n            }}\n          />\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button type=\"submit\" className=\"w-full md:w-auto\">\n            Add Facility\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AAQA;AACA;AAQA;AACA;AAtBA;AAEA;;;AAJA;;;;;;;;;;AA0BA,qCAAqC;AACrC,MAAM,aAAa,wIAAE,MAAM,CAAC;IAC1B,MAAM,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,QAAQ,wIAAE,KAAK,CAAC,wIAAE,MAAM,IAAI,GAAG,CAAC,GAAG;AACrC;AAEA,wBAAwB;AACxB,MAAM,kBAAkB;IACtB,oBAAoB,WAAW,MAAM,CAAC;QACpC,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAC/B,iBAAiB,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QACnC,eAAe,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACnC;IACA,oBAAoB,WAAW,MAAM,CAAC;QACpC,YAAY,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAC9B,gBAAgB,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAClC,aAAa,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC;IACA,iBAAiB,WAAW,MAAM,CAAC;QACjC,UAAU,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAC5B,cAAc,wIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAChC,WAAW,wIAAE,KAAK,CAAC,wIAAE,MAAM;IAC7B;AAEF;AAOO,SAAS,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAqB;;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjD,MAAM,SAAS,eAAe,CAAC,KAAqC,IAAI;IAExE,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA0B;QAC3C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,aAAa;YACb,QAAQ,EAAE;QACZ;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,SAAS;YAAE,GAAG,MAAM;YAAE;QAAO;IAC/B;IAEA,MAAM,2BAA2B;QAC/B,OAAQ;YACN,KAAK;gBACH,qBACE;;sCACE,6LAAC,mIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sDACP,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gDAAC,MAAK;gDAAU,GAAG,KAAK;;;;;;;;;;;sDAEhC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sCAIlB,6LAAC,mIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sDACP,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gDAAC,MAAK;gDAAU,GAAG,KAAK;;;;;;;;;;;sDAEhC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sCAIlB,6LAAC,mIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sDACP,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gDAAC,MAAK;gDAAU,GAAG,KAAK;;;;;;;;;;;sDAEhC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;YAMxB,wCAAwC;YACxC;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,6LAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAe,WAAU;;8BACzD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,mIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sDACP,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gDAAE,GAAG,KAAK;;;;;;;;;;;sDAElB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sCAIlB,6LAAC,mIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sDACP,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gDAAE,GAAG,KAAK;;;;;;;;;;;sDAErB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;wBAIjB;;;;;;;8BAGH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,6LAAC,8IAAA,CAAA,cAAW;4BACV,OAAO;4BACP,UAAU,CAAC;gCACT,UAAU;gCACV,KAAK,QAAQ,CAAC,UAAU;4BAC1B;4BACA,UAAU,CAAC;gCACT,MAAM,YAAY,OAAO,MAAM,CAAC,CAAC,QAAU,UAAU;gCACrD,UAAU;gCACV,KAAK,QAAQ,CAAC,UAAU;4BAC1B;;;;;;;;;;;;8BAIJ,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;kCAAmB;;;;;;;;;;;;;;;;;;;;;;AAO7D;GA9HgB;;QAID,iKAAA,CAAA,UAAO;;;KAJN"}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/app/%28dashboard%29/service-provider/add-facilities/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { cn } from '@/lib/utils'\nimport { Input } from '@/components/ui/input'\nimport {\n  Building2,\n  Users,\n  VideoIcon,\n  Microscope,\n  MonitorPlay,\n  LayoutDashboard,\n  ChevronRight,\n} from 'lucide-react'\nimport { FacilityForm } from '@/components/forms/facility-form'\n\nconst facilityTypes = [\n  {\n    id: 'individual-cabin',\n    name: 'Individual Cabin',\n    icon: Building2,\n    description: 'Private office spaces for focused work',\n  },\n  {\n    id: 'coworking-spaces',\n    name: 'Coworking Spaces',\n    icon: Users,\n    description: 'Shared workspace for collaboration',\n  },\n  {\n    id: 'meeting-rooms',\n    name: 'Meeting/Board Rooms',\n    icon: VideoIcon,\n    description: 'Conference and training facilities',\n  },\n  {\n    id: 'bio-labs',\n    name: 'Bio & Allied / Manufacturing / Prototyping Labs',\n    icon: Microscope,\n    description: 'Specialized laboratory facilities',\n  },\n  {\n    id: 'software',\n    name: 'Specialized Softwares',\n    icon: MonitorPlay,\n    description: 'Professional software solutions',\n  },\n  {\n    id: 'raw-space',\n    name: 'Raw Space (Office/Lab Setup)',\n    icon: LayoutDashboard,\n    description: 'Customizable space for your needs',\n  },\n]\n\nexport default function AddFacilities() {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [selectedType, setSelectedType] = useState<string | null>(null)\n\n  const filteredTypes = facilityTypes.filter(type =>\n    type.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n\n  const handleSubmit = async (data: any) => {\n    try {\n      // TODO: Implement facility creation\n      console.log('Form submitted:', data)\n    } catch (error) {\n      console.error('Error creating facility:', error)\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-semibold\">Add New Facilities</h1>\n        <p className=\"mt-2 text-sm text-muted-foreground\">\n          We are glad to see you again\n        </p>\n      </div>\n\n      {/* Search Input */}\n      <div className=\"max-w-md\">\n        <Input\n          type=\"text\"\n          placeholder=\"Facility Title\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"h-12\"\n        />\n      </div>\n\n      {/* Facility Types Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {filteredTypes.map((type) => (\n          <button\n            key={type.id}\n            onClick={() => setSelectedType(type.id)}\n            className={cn(\n              'flex items-start gap-4 p-4 rounded-lg border transition-all duration-200',\n              selectedType === type.id\n                ? 'border-primary bg-primary/5 shadow-sm'\n                : 'border-gray-200 bg-white hover:border-primary/50 hover:shadow-sm'\n            )}\n          >\n            <div className=\"h-10 w-10 rounded-lg bg-primary/10 text-primary flex items-center justify-center\">\n              <type.icon className=\"h-5 w-5\" />\n            </div>\n            <div className=\"flex-1 text-left\">\n              <h3 className=\"font-medium\">{type.name}</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                {type.description}\n              </p>\n            </div>\n            <ChevronRight className={cn(\n              'h-5 w-5 text-gray-400 transition-transform',\n              selectedType === type.id && 'transform rotate-90'\n            )} />\n          </button>\n        ))}\n      </div>\n\n      {/* Dynamic Form */}\n      {selectedType && (\n        <div className=\"mt-8 p-6 bg-white rounded-lg border\">\n          <FacilityForm type={selectedType} onSubmit={handleSubmit} />\n        </div>\n      )}\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAUA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AALA;;;;;;AAgBA,MAAM,gBAAgB;IACpB;QACE,IAAI;QACJ,MAAM;QACN,MAAM,mNAAA,CAAA,YAAS;QACf,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM,uMAAA,CAAA,QAAK;QACX,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM,2MAAA,CAAA,YAAS;QACf,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM,iNAAA,CAAA,aAAU;QAChB,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM,uNAAA,CAAA,cAAW;QACjB,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM,+NAAA,CAAA,kBAAe;QACrB,aAAa;IACf;CACD;AAEc,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,gBAAgB,cAAc,MAAM,CAAC,CAAA,OACzC,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,WAAW;IAG1D,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,oCAAoC;YACpC,QAAQ,GAAG,CAAC,mBAAmB;QACjC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,6LAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAMpD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;oBACJ,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;oBAC9C,WAAU;;;;;;;;;;;0BAKd,6LAAC;gBAAI,WAAU;0BACZ,cAAc,GAAG,CAAC,CAAC,qBAClB,6LAAC;wBAEC,SAAS,IAAM,gBAAgB,KAAK,EAAE;wBACtC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4EACA,iBAAiB,KAAK,EAAE,GACpB,0CACA;;0CAGN,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,KAAK,IAAI;oCAAC,WAAU;;;;;;;;;;;0CAEvB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAe,KAAK,IAAI;;;;;;kDACtC,6LAAC;wCAAE,WAAU;kDACV,KAAK,WAAW;;;;;;;;;;;;0CAGrB,6LAAC,yNAAA,CAAA,eAAY;gCAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACxB,8CACA,iBAAiB,KAAK,EAAE,IAAI;;;;;;;uBApBzB,KAAK,EAAE;;;;;;;;;;YA2BjB,8BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,kJAAA,CAAA,eAAY;oBAAC,MAAM;oBAAc,UAAU;;;;;;;;;;;;;;;;;AAKtD;GA3EwB;KAAA"}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}