{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\"bg-primary font-medium text-primary-foreground\", className)}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n} "],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sMAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } "],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label } "],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/form.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea } "],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,sMAAM,UAAU,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/checkbox.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox } "],"names":[],"mappings":";;;;AAAA;AAGA;AAFA;AACA;;;;;;AAGA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/types/index.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const RENTAL_PLANS = ['Annual', 'Monthly', 'Weekly', 'One Day (24 Hours)'] as const\n\nexport interface RentalPlan {\n  name: typeof RENTAL_PLANS[number]\n  price: number\n  duration: typeof RENTAL_PLANS[number]\n}\n\nexport type FacilityType = \n  | 'individual-cabin'\n  | 'coworking-spaces'\n  | 'meeting-rooms'\n  | 'bio-allied-labs'\n  | 'manufacturing-labs'\n  | 'prototyping-labs'\n  | 'software'\n  | 'saas-allied'\n  | 'raw-space-office'\n  | 'raw-space-lab'\n\nexport interface BaseFormFields {\n  name: string\n  description: string\n  images: string[]\n  videoLink?: string\n  rentalPlans: RentalPlan[]\n  subscriptionPlans?: RentalPlan[]\n  rentPerYear?: number\n  rentPerMonth?: number\n  rentPerWeek?: number\n  dayPassRent?: number\n}\n\nexport interface LabEquipment {\n  labName: string\n  equipmentName: string\n  capacityAndMake: string\n}\n\nexport interface SoftwareEquipment {\n  softwareName: string\n  version: string\n}\n\nexport interface SaasEquipment {\n  equipmentName: string\n  capacityAndMake: string\n}\n\nexport interface AreaDetails {\n  area: number\n  type: 'Covered' | 'Uncovered'\n  furnishing: 'Furnished' | 'Not Furnished'\n  customisation: 'Open to Customisation' | 'Cannot be Customised'\n}\n\nexport interface IndividualCabinFields extends BaseFormFields {\n  totalCabins: number\n  availableCabins: number\n}\n\nexport interface CoworkingSpaceFields extends BaseFormFields {\n  totalSeats: number\n  availableSeats: number\n}\n\nexport interface MeetingRoomFields extends BaseFormFields {\n  totalRooms: number\n  seatingCapacity: number\n  totalTrainingRoomSeaters: number\n}\n\nexport interface LabFields extends BaseFormFields {\n  equipment: LabEquipment[]\n}\n\nexport interface SoftwareFields extends BaseFormFields {\n  equipment: SoftwareEquipment[]\n}\n\nexport interface SaasFields extends BaseFormFields {\n  equipment: SaasEquipment[]\n}\n\nexport interface RawSpaceOfficeFields extends BaseFormFields {\n  areaDetails: AreaDetails[]\n}\n\nexport interface RawSpaceLabFields extends BaseFormFields {\n  areaDetails: AreaDetails[]\n}\n\nexport type FormData = \n  | IndividualCabinFields\n  | CoworkingSpaceFields\n  | MeetingRoomFields\n  | LabFields\n  | SoftwareFields\n  | SaasFields\n  | RawSpaceOfficeFields\n  | RawSpaceLabFields\n\nexport interface FacilityFormProps {\n  onSubmit: (data: FormData) => void\n  onChange?: () => void\n} "],"names":[],"mappings":";;;AAEO,MAAM,eAAe;IAAC;IAAU;IAAW;IAAU;CAAqB"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/individual-cabin.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, IndividualCabinFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  totalCabins: z.number().min(1, 'Must have at least 1 cabin'),\n  availableCabins: z.number().min(0),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function IndividualCabinForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      totalCabins: 0,\n      availableCabins: 0,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    try {\n      console.log('Form submission started - Individual Cabin Form')\n      console.log('Form values:', values)\n      \n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Validate cabin counts\n      if (values.totalCabins <= 0) {\n        console.log('Validation failed: Invalid total cabins')\n        form.setError('totalCabins', {\n          type: 'manual',\n          message: 'Total cabins must be greater than 0'\n        })\n        return\n      }\n\n      if (values.availableCabins > values.totalCabins) {\n        console.log('Validation failed: Available cabins exceed total cabins')\n        form.setError('availableCabins', {\n          type: 'manual',\n          message: 'Available cabins cannot exceed total cabins'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'individual-cabin' as const,\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        totalCabins: Number(values.totalCabins),\n        availableCabins: Number(values.availableCabins),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"totalCabins\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Total No. of individual cabins available *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"availableCabins\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>No. of Cabins currently available for occupancy *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Kindly upload the photos of the Individual Cabins *</FormLabel>\n          <FormControl>\n            <ImageUpload\n              value={images}\n              onChange={handleImageUpload}\n              onRemove={(url) => {\n                const newImages = images.filter((image) => image !== url)\n                handleImageUpload(newImages)\n              }}\n            />\n          </FormControl>\n          {form.formState.errors.root && (\n            <p className=\"text-sm text-destructive\">{form.formState.errors.root.message}</p>\n          )}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1275, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/coworking-spaces.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, CoworkingSpaceFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  totalSeats: z.number().min(1, 'Must have at least 1 seat'),\n  availableSeats: z.number().min(0),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function CoworkingSpacesForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      totalSeats: 0,\n      availableSeats: 0,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    try {\n      console.log('Form submission started - Coworking Spaces Form')\n      console.log('Form values:', values)\n      \n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Validate seat counts\n      if (values.totalSeats <= 0) {\n        console.log('Validation failed: Invalid total seats')\n        form.setError('totalSeats', {\n          type: 'manual',\n          message: 'Total seats must be greater than 0'\n        })\n        return\n      }\n\n      if (values.availableSeats > values.totalSeats) {\n        console.log('Validation failed: Available seats exceed total seats')\n        form.setError('availableSeats', {\n          type: 'manual',\n          message: 'Available seats cannot exceed total seats'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'coworking-spaces' as const,\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        totalSeats: Number(values.totalSeats),\n        availableSeats: Number(values.availableSeats),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"totalSeats\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Total No. of Coworking Seaters available *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"availableSeats\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>No. of seats currently available for occupancy *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Kindly upload the photos of your facility *</FormLabel>\n          <FormControl>\n            <ImageUpload\n              value={images}\n              onChange={handleImageUpload}\n              onRemove={(url) => {\n                const newImages = images.filter((image) => image !== url)\n                handleImageUpload(newImages)\n              }}\n            />\n          </FormControl>\n          {form.formState.errors.root && (\n            <p className=\"text-sm text-destructive\">{form.formState.errors.root.message}</p>\n          )}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2073, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/meeting-rooms.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, MeetingRoomFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  totalRooms: z.number().min(1, 'Must have at least 1 room'),\n  seatingCapacity: z.number().min(1, 'Must have at least 1 seat'),\n  totalTrainingRoomSeaters: z.number().min(0),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function MeetingRoomsForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      totalRooms: 0,\n      seatingCapacity: 0,\n      totalTrainingRoomSeaters: 0,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    try {\n      console.log('Form submission started - Meeting Rooms Form')\n      console.log('Form values:', values)\n      \n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Validate room counts and seating capacity\n      if (values.totalRooms <= 0) {\n        console.log('Validation failed: Invalid total rooms')\n        form.setError('totalRooms', {\n          type: 'manual',\n          message: 'Total rooms must be greater than 0'\n        })\n        return\n      }\n\n      if (values.seatingCapacity <= 0) {\n        console.log('Validation failed: Invalid seating capacity')\n        form.setError('seatingCapacity', {\n          type: 'manual',\n          message: 'Seating capacity must be greater than 0'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'meeting-rooms' as const,\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        totalRooms: Number(values.totalRooms),\n        seatingCapacity: Number(values.seatingCapacity),\n        totalTrainingRoomSeaters: Number(values.totalTrainingRoomSeaters),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"totalRooms\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Total No. of Meeting/Board Rooms *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"seatingCapacity\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Seating Capacity per Room *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"totalTrainingRoomSeaters\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Total Training Room Seaters *</FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"number\" \n                    min={0}\n                    {...field} \n                    onChange={e => {\n                      const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                      field.onChange(value)\n                    }} \n                    value={field.value || ''}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Kindly upload the photos of your Meeting/Board Rooms *</FormLabel>\n          <FormControl>\n            <ImageUpload\n              value={images}\n              onChange={handleImageUpload}\n              onRemove={(url) => {\n                const newImages = images.filter((image) => image !== url)\n                handleImageUpload(newImages)\n              }}\n            />\n          </FormControl>\n          {form.formState.errors.root && (\n            <p className=\"text-sm text-destructive\">{form.formState.errors.root.message}</p>\n          )}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2922, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/bio-allied-labs.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, LabFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  equipment: z.array(z.object({\n    labName: z.string().min(1, 'Lab name is required'),\n    equipmentName: z.string().min(1, 'Equipment name is required'),\n    capacityAndMake: z.string().min(1, 'Capacity and make is required'),\n  })).min(1, 'At least one equipment item is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function BioAlliedLabsForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [equipment, setEquipment] = useState([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      equipment: [{ labName: '', equipmentName: '', capacityAndMake: '' }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addEquipment = () => {\n    setEquipment([...equipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', [...currentEquipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n  }\n\n  const removeEquipment = (index: number) => {\n    const newEquipment = equipment.filter((_, i) => i !== index)\n    setEquipment(newEquipment)\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', currentEquipment.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    console.log('Form submission started - Bio Allied Labs Form')\n    console.log('Form values:', values)\n    \n    try {\n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate equipment data\n      const validEquipment = values.equipment.filter(eq => \n        eq.labName.trim() !== '' && \n        eq.equipmentName.trim() !== '' && \n        eq.capacityAndMake.trim() !== ''\n      )\n\n      if (validEquipment.length === 0) {\n        console.log('Validation failed: No valid equipment data')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one equipment with all fields filled'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'bio-allied-labs',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        equipment: validEquipment.map(eq => ({\n          labName: eq.labName,\n          equipmentName: eq.equipmentName,\n          capacityAndMake: eq.capacityAndMake\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        }),\n        rentPerYear: values.rentPerYear,\n        rentPerMonth: values.rentPerMonth,\n        rentPerWeek: values.rentPerWeek,\n        dayPassRent: values.dayPassRent\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setEquipment([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Video Link (Optional)</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"space-y-4\">\n          <FormLabel>Rental Plans</FormLabel>\n          {RENTAL_PLANS.map((plan) => (\n            <FormField\n              key={plan}\n              control={form.control}\n              name=\"selectedRentalPlans\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value?.includes(plan)}\n                      onCheckedChange={(checked) => {\n                        const value = field.value || []\n                        if (checked) {\n                          field.onChange([...value, plan])\n                        } else {\n                          field.onChange(value.filter((p) => p !== plan))\n                        }\n                        onChange?.()\n                      }}\n                    />\n                  </FormControl>\n                  <FormLabel className=\"font-normal capitalize\">\n                    {plan}\n                  </FormLabel>\n                </FormItem>\n              )}\n            />\n          ))}\n        </div>\n\n        {form.watch('selectedRentalPlans')?.includes('Annual') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerYear\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Yearly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Monthly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerMonth\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Monthly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Weekly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerWeek\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Weekly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('One Day (24 Hours)') && (\n          <FormField\n            control={form.control}\n            name=\"dayPassRent\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Day Pass Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Lab Equipment Details</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addEquipment}\n            >\n              Add Equipment\n            </Button>\n          </div>\n          {equipment.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.labName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Lab Name</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.equipmentName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Equipment Name</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.capacityAndMake`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Capacity and Make</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {index > 0 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeEquipment(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 3781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3787, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/manufacturing-labs.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, LabFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  equipment: z.array(z.object({\n    labName: z.string().min(1, 'Lab name is required'),\n    equipmentName: z.string().min(1, 'Equipment name is required'),\n    capacityAndMake: z.string().min(1, 'Capacity and make is required'),\n  })).min(1, 'At least one equipment item is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function ManufacturingLabsForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [equipment, setEquipment] = useState([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      equipment: [{ labName: '', equipmentName: '', capacityAndMake: '' }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addEquipment = () => {\n    setEquipment([...equipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', [...currentEquipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n  }\n\n  const removeEquipment = (index: number) => {\n    const newEquipment = equipment.filter((_, i) => i !== index)\n    setEquipment(newEquipment)\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', currentEquipment.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    console.log('Form submission started - Manufacturing Labs Form')\n    console.log('Form values:', values)\n    \n    try {\n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate equipment data\n      const validEquipment = values.equipment.filter(eq => \n        eq.labName.trim() !== '' && \n        eq.equipmentName.trim() !== '' && \n        eq.capacityAndMake.trim() !== ''\n      )\n\n      if (validEquipment.length === 0) {\n        console.log('Validation failed: No valid equipment data')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one equipment with all fields filled'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'manufacturing-labs',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        equipment: validEquipment.map(eq => ({\n          labName: eq.labName,\n          equipmentName: eq.equipmentName,\n          capacityAndMake: eq.capacityAndMake\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setEquipment([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Manufacturing Equipment Details *</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addEquipment}\n            >\n              Add Equipment\n            </Button>\n          </div>\n          {equipment.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.labName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Lab Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.equipmentName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Equipment Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.capacityAndMake`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Capacity and Make *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {equipment.length > 1 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeEquipment(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images *</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 4705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4711, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/prototyping-labs.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, LabFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  equipment: z.array(z.object({\n    labName: z.string().min(1, 'Lab name is required'),\n    equipmentName: z.string().min(1, 'Equipment name is required'),\n    capacityAndMake: z.string().min(1, 'Capacity and make is required'),\n  })).min(1, 'At least one equipment item is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function PrototypingLabsForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [equipment, setEquipment] = useState([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      equipment: [{ labName: '', equipmentName: '', capacityAndMake: '' }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addEquipment = () => {\n    setEquipment([...equipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', [...currentEquipment, { labName: '', equipmentName: '', capacityAndMake: '' }])\n  }\n\n  const removeEquipment = (index: number) => {\n    const newEquipment = equipment.filter((_, i) => i !== index)\n    setEquipment(newEquipment)\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', currentEquipment.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    console.log('Form submission started - Prototyping Labs Form')\n    console.log('Form values:', values)\n    \n    try {\n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate equipment data\n      const validEquipment = values.equipment.filter(eq => \n        eq.labName.trim() !== '' && \n        eq.equipmentName.trim() !== '' && \n        eq.capacityAndMake.trim() !== ''\n      )\n\n      if (validEquipment.length === 0) {\n        console.log('Validation failed: No valid equipment data')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one equipment with all fields filled'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'prototyping-labs',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        equipment: validEquipment.map(eq => ({\n          labName: eq.labName,\n          equipmentName: eq.equipmentName,\n          capacityAndMake: eq.capacityAndMake\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setEquipment([{ labName: '', equipmentName: '', capacityAndMake: '' }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Prototyping Equipment Details *</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addEquipment}\n            >\n              Add Equipment\n            </Button>\n          </div>\n          {equipment.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.labName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Lab Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.equipmentName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Equipment Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.capacityAndMake`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Capacity and Make *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {equipment.length > 1 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeEquipment(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images *</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 5629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5635, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/software.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, SoftwareFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  equipment: z.array(z.object({\n    softwareName: z.string().min(1, 'Software name is required'),\n    version: z.string().min(1, 'Version is required'),\n  })).min(1, 'At least one software is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport function SoftwareForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      equipment: [{ softwareName: '', version: '' }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n  const equipment = form.watch('equipment') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    try {\n      console.log('Form submission started - Software Form')\n      console.log('Form values:', values)\n      \n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate equipment data\n      const validEquipment = values.equipment.filter(eq => \n        eq.softwareName.trim() !== '' && eq.version.trim() !== ''\n      )\n\n      if (validEquipment.length === 0) {\n        console.log('Validation failed: No valid software data')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one software with name and version'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData: SoftwareFields = {\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        equipment: validEquipment.map(eq => ({\n          softwareName: eq.softwareName,\n          version: eq.version\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        }),\n        rentPerYear: values.rentPerYear,\n        rentPerMonth: values.rentPerMonth,\n        rentPerWeek: values.rentPerWeek,\n        dayPassRent: values.dayPassRent\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  const addEquipment = () => {\n    const currentEquipment = form.getValues('equipment') || []\n    form.setValue('equipment', [\n      ...currentEquipment,\n      { softwareName: '', version: '' }\n    ])\n  }\n\n  const removeEquipment = (index: number) => {\n    const currentEquipment = form.getValues('equipment') || []\n    if (currentEquipment.length > 1) {\n      form.setValue('equipment', currentEquipment.filter((_, i) => i !== index))\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Software Details *</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addEquipment}\n            >\n              Add Software\n            </Button>\n          </div>\n          {equipment.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.softwareName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Software Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.version`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Version *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {equipment.length > 1 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeEquipment(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Kindly upload the photos of your Software Facility *</FormLabel>\n          <FormControl>\n            <ImageUpload\n              value={images}\n              onChange={handleImageUpload}\n              onRemove={(url) => setImages(images.filter((val) => val !== url))}\n            />\n          </FormControl>\n          {form.formState.errors.root && (\n            <p className=\"text-sm text-destructive\">{form.formState.errors.root.message}</p>\n          )}\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AAdA;AAFA;AAHA;;;;;;;;;;;;;AAqBA,MAAM,aAAa,qIAAE,MAAM,CAAC;IAC1B,MAAM,qIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,aAAa,qIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,QAAQ,qIAAE,KAAK,CAAC,qIAAE,MAAM,IAAI,GAAG,CAAC,GAAG;IACnC,WAAW,qIAAE,MAAM,GAAG,QAAQ;IAC9B,qBAAqB,qIAAE,KAAK,CAAC,qIAAE,IAAI,CAAC,4IAAA,CAAA,eAAY,GAAG,GAAG,CAAC,GAAG;IAC1D,WAAW,qIAAE,KAAK,CAAC,qIAAE,MAAM,CAAC;QAC1B,cAAc,qIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;QAChC,SAAS,qIAAE,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,IAAI,GAAG,CAAC,GAAG;IACX,aAAa,qIAAE,MAAM,GAAG,QAAQ;IAChC,cAAc,qIAAE,MAAM,GAAG,QAAQ;IACjC,aAAa,qIAAE,MAAM,GAAG,QAAQ;IAChC,aAAa,qIAAE,MAAM,GAAG,QAAQ;AAClC;AAIO,SAAS,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAqB;IACpE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEjD,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAc;QAC/B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,aAAa;YACb,QAAQ,EAAE;YACV,WAAW;YACX,qBAAqB,EAAE;YACvB,WAAW;gBAAC;oBAAE,cAAc;oBAAI,SAAS;gBAAG;aAAE;YAC9C,aAAa;YACb,cAAc;YACd,aAAa;YACb,aAAa;QACf;IACF;IAEA,MAAM,sBAAsB,KAAK,KAAK,CAAC,0BAA0B,EAAE;IACnE,MAAM,YAAY,KAAK,KAAK,CAAC,gBAAgB,EAAE;IAE/C,MAAM,oBAAoB,CAAC;QACzB,UAAU;QACV,KAAK,QAAQ,CAAC,UAAU;QACxB;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,QAAQ,GAAG,CAAC,gBAAgB;YAE5B,IAAI,OAAO,MAAM,KAAK,GAAG;gBACvB,QAAQ,GAAG,CAAC;gBACZ,KAAK,QAAQ,CAAC,QAAQ;oBACpB,MAAM;oBACN,SAAS;gBACX;gBACA;YACF;YAEA,0BAA0B;YAC1B,MAAM,iBAAiB,OAAO,SAAS,CAAC,MAAM,CAAC,CAAA,KAC7C,GAAG,YAAY,CAAC,IAAI,OAAO,MAAM,GAAG,OAAO,CAAC,IAAI,OAAO;YAGzD,IAAI,eAAe,MAAM,KAAK,GAAG;gBAC/B,QAAQ,GAAG,CAAC;gBACZ,KAAK,QAAQ,CAAC,QAAQ;oBACpB,MAAM;oBACN,SAAS;gBACX;gBACA;YACF;YAEA,IAAI,CAAC,OAAO,mBAAmB,CAAC,MAAM,EAAE;gBACtC,QAAQ,GAAG,CAAC;gBACZ,KAAK,QAAQ,CAAC,QAAQ;oBACpB,MAAM;oBACN,SAAS;gBACX;gBACA;YACF;YAEA,8DAA8D;YAC9D,MAAM,iBAAiB,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAA;gBACtD,OAAQ;oBACN,KAAK;wBACH,OAAO,CAAC,CAAC,OAAO,WAAW;oBAC7B,KAAK;wBACH,OAAO,CAAC,CAAC,OAAO,YAAY;oBAC9B,KAAK;wBACH,OAAO,CAAC,CAAC,OAAO,WAAW;oBAC7B,KAAK;wBACH,OAAO,CAAC,CAAC,OAAO,WAAW;oBAC7B;wBACE,OAAO;gBACX;YACF;YAEA,IAAI,CAAC,gBAAgB;gBACnB,QAAQ,GAAG,CAAC;gBACZ,KAAK,QAAQ,CAAC,QAAQ;oBACpB,MAAM;oBACN,SAAS;gBACX;gBACA;YACF;YAEA,gCAAgC;YAChC,MAAM,iBAAiC;gBACrC,MAAM,OAAO,IAAI;gBACjB,aAAa,OAAO,WAAW;gBAC/B;gBACA,WAAW,OAAO,SAAS,IAAI;gBAC/B,WAAW,eAAe,GAAG,CAAC,CAAA,KAAM,CAAC;wBACnC,cAAc,GAAG,YAAY;wBAC7B,SAAS,GAAG,OAAO;oBACrB,CAAC;gBACD,aAAa,OAAO,mBAAmB,CAAC,GAAG,CAAC,CAAA;oBAC1C,IAAI,QAAQ;oBACZ,OAAQ;wBACN,KAAK;4BACH,QAAQ,OAAO,WAAW,IAAI;4BAC9B;wBACF,KAAK;4BACH,QAAQ,OAAO,YAAY,IAAI;4BAC/B;wBACF,KAAK;4BACH,QAAQ,OAAO,WAAW,IAAI;4BAC9B;wBACF,KAAK;4BACH,QAAQ,OAAO,WAAW,IAAI;4BAC9B;oBACJ;oBACA,OAAO;wBACL,MAAM;wBACN;wBACA,UAAU;oBACZ;gBACF;gBACA,aAAa,OAAO,WAAW;gBAC/B,cAAc,OAAO,YAAY;gBACjC,aAAa,OAAO,WAAW;gBAC/B,aAAa,OAAO,WAAW;YACjC;YAEA,QAAQ,GAAG,CAAC,oBAAoB;YAChC,MAAM,SAAS;YACf,QAAQ,GAAG,CAAC;YAEZ,mBAAmB;YACnB,KAAK,KAAK;YACV,UAAU,EAAE;YACZ;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,KAAK,QAAQ,CAAC,QAAQ;gBACpB,MAAM;gBACN,SAAS;YACX;QACF;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,mBAAmB,KAAK,SAAS,CAAC,gBAAgB,EAAE;QAC1D,KAAK,QAAQ,CAAC,aAAa;eACtB;YACH;gBAAE,cAAc;gBAAI,SAAS;YAAG;SACjC;IACH;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,mBAAmB,KAAK,SAAS,CAAC,gBAAgB,EAAE;QAC1D,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,KAAK,QAAQ,CAAC,aAAa,iBAAiB,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;QACrE;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,8OAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAmB,WAAU;;8BAC7D,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDAAE,GAAG,KAAK;;;;;;;;;;;sDAElB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sCAIlB,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAE,GAAG,KAAK;;;;;;;;;;;sDAErB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;8BAMpB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,kIAAA,CAAA,SAAM;oCACL,MAAK;oCACL,SAAQ;oCACR,MAAK;oCACL,SAAS;8CACV;;;;;;;;;;;;wBAIF,UAAU,GAAG,CAAC,CAAC,GAAG,sBACjB,8OAAC;gCAAgB,WAAU;;kDACzB,8OAAC,gIAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAM,CAAC,UAAU,EAAE,MAAM,aAAa,CAAC;wCACvC,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kEACP,8OAAC,gIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,gIAAA,CAAA,cAAW;kEACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;;;;;;;;;;;kEAElB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAIlB,8OAAC,gIAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAM,CAAC,UAAU,EAAE,MAAM,QAAQ,CAAC;wCAClC,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kEACP,8OAAC,gIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,gIAAA,CAAA,cAAW;kEACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;;;;;;;;;;;kEAElB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;oCAIjB,UAAU,MAAM,GAAG,mBAClB,8OAAC,kIAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;kDACX;;;;;;;+BAlCK;;;;;;;;;;;8BA0Cd,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,gIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,2IAAA,CAAA,cAAW;gCACV,OAAO;gCACP,UAAU;gCACV,UAAU,CAAC,MAAQ,UAAU,OAAO,MAAM,CAAC,CAAC,MAAQ,QAAQ;;;;;;;;;;;wBAG/D,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,kBACzB,8OAAC;4BAAE,WAAU;sCAA4B,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO;;;;;;;;;;;;8BAI/E,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,MAAK;wCAAM,aAAY;wCAA+B,GAAG,KAAK;;;;;;;;;;;8CAEvE,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAKlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAI,WAAU;kDACZ,4IAAA,CAAA,eAAY,CAAC,GAAG,CAAC,CAAC,qBACjB,8OAAC;gDAAe,WAAU;;kEACxB,8OAAC,oIAAA,CAAA,WAAQ;wDACP,SAAS,MAAM,KAAK,EAAE,SAAS;wDAC/B,iBAAiB,CAAC;4DAChB,MAAM,eAAe,UACjB;mEAAK,MAAM,KAAK,IAAI,EAAE;gEAAG;6DAAK,GAC9B,MAAM,KAAK,EAAE,OAAO,CAAC,IAAM,MAAM,SAAS,EAAE;4DAChD,MAAM,QAAQ,CAAC;4DAEf,IAAI,CAAC,SAAS;gEACZ,OAAQ;oEACN,KAAK;wEACH,KAAK,QAAQ,CAAC,eAAe;wEAC7B;oEACF,KAAK;wEACH,KAAK,QAAQ,CAAC,gBAAgB;wEAC9B;oEACF,KAAK;wEACH,KAAK,QAAQ,CAAC,eAAe;wEAC7B;oEACF,KAAK;wEACH,KAAK,QAAQ,CAAC,eAAe;wEAC7B;gEACJ;4DACF;wDACF;;;;;;kEAEF,8OAAC;wDAAM,WAAU;kEACd;;;;;;;+CA5BK;;;;;;;;;;;;;;;8CAkChB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAKlB,8OAAC;oBAAI,WAAU;;wBACZ,oBAAoB,QAAQ,CAAC,2BAC5B,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDACJ,MAAK;gDACL,KAAK;gDACJ,GAAG,KAAK;gDACT,UAAU,CAAA;oDACR,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,KAAK;oDAC3E,MAAM,QAAQ,CAAC;gDACjB;gDACA,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;sDAG1B,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;wBAKnB,oBAAoB,QAAQ,CAAC,4BAC5B,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDACJ,MAAK;gDACL,KAAK;gDACJ,GAAG,KAAK;gDACT,UAAU,CAAA;oDACR,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,KAAK;oDAC3E,MAAM,QAAQ,CAAC;gDACjB;gDACA,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;sDAG1B,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;wBAKnB,oBAAoB,QAAQ,CAAC,2BAC5B,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDACJ,MAAK;gDACL,KAAK;gDACJ,GAAG,KAAK;gDACT,UAAU,CAAA;oDACR,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,KAAK;oDAC3E,MAAM,QAAQ,CAAC;gDACjB;gDACA,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;sDAG1B,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;wBAKnB,oBAAoB,QAAQ,CAAC,uCAC5B,8OAAC,gIAAA,CAAA,YAAS;4BACR,SAAS,KAAK,OAAO;4BACrB,MAAK;4BACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDACJ,MAAK;gDACL,KAAK;gDACJ,GAAG,KAAK;gDACT,UAAU,CAAA;oDACR,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,KAAK;oDAC3E,MAAM,QAAQ,CAAC;gDACjB;gDACA,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;sDAG1B,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;8BAOtB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBACL,MAAK;wBACL,WAAU;wBACV,UAAU,KAAK,SAAS,CAAC,YAAY;kCAEpC,KAAK,SAAS,CAAC,YAAY,iBAC1B;;8CACE,8OAAC;oCAAK,WAAU;8CAAO;;;;;;8CACvB,8OAAC;oCAAK,WAAU;8CAAe;;;;;;;2CAGjC;;;;;;;;;;;;;;;;;;;;;;AAOd"}},
    {"offset": {"line": 6483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6489, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/saas-allied.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport { RENTAL_PLANS, SaasFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  equipment: z.array(z.object({\n    equipmentName: z.string().min(1, 'Equipment name is required'),\n    capacityAndMake: z.string().min(1, 'Capacity and make is required'),\n  })).min(1, 'At least one equipment item is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\ninterface RentalPlan {\n  name: typeof RENTAL_PLANS[number]\n  price: number\n  duration: typeof RENTAL_PLANS[number]\n}\n\nexport function SaasAlliedForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [equipment, setEquipment] = useState([{ equipmentName: '', capacityAndMake: '' }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      equipment: [{ equipmentName: '', capacityAndMake: '' }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addEquipment = () => {\n    setEquipment([...equipment, { equipmentName: '', capacityAndMake: '' }])\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', [...currentEquipment, { equipmentName: '', capacityAndMake: '' }])\n  }\n\n  const removeEquipment = (index: number) => {\n    const newEquipment = equipment.filter((_, i) => i !== index)\n    setEquipment(newEquipment)\n    const currentEquipment = form.getValues('equipment')\n    form.setValue('equipment', currentEquipment.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    console.log('Form submission started - SaaS Allied Form')\n    console.log('Form values:', values)\n    \n    try {\n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate equipment data\n      const validEquipment = values.equipment.filter(eq => \n        eq.equipmentName.trim() !== '' && eq.capacityAndMake.trim() !== ''\n      )\n\n      if (validEquipment.length === 0) {\n        console.log('Validation failed: No valid equipment data')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one equipment with name and capacity'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'saas-allied',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        equipment: validEquipment,\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        }),\n        rentPerYear: values.rentPerYear,\n        rentPerMonth: values.rentPerMonth,\n        rentPerWeek: values.rentPerWeek,\n        dayPassRent: values.dayPassRent\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setEquipment([{ equipmentName: '', capacityAndMake: '' }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Video Link (Optional)</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"space-y-4\">\n          <FormLabel>Rental Plans</FormLabel>\n          {RENTAL_PLANS.map((plan) => (\n            <FormField\n              key={plan}\n              control={form.control}\n              name=\"selectedRentalPlans\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value?.includes(plan)}\n                      onCheckedChange={(checked) => {\n                        const value = field.value || []\n                        if (checked) {\n                          field.onChange([...value, plan])\n                        } else {\n                          field.onChange(value.filter((p) => p !== plan))\n                        }\n                        onChange?.()\n                      }}\n                    />\n                  </FormControl>\n                  <FormLabel className=\"font-normal capitalize\">\n                    {plan}\n                  </FormLabel>\n                </FormItem>\n              )}\n            />\n          ))}\n        </div>\n\n        {form.watch('selectedRentalPlans')?.includes('Annual') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerYear\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Yearly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Monthly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerMonth\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Monthly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Weekly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerWeek\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Weekly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('One Day (24 Hours)') && (\n          <FormField\n            control={form.control}\n            name=\"dayPassRent\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Day Pass Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Equipment Details</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addEquipment}\n            >\n              Add Equipment\n            </Button>\n          </div>\n          {equipment.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.equipmentName`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Equipment Name</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`equipment.${index}.capacityAndMake`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Capacity and Make</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {index > 0 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeEquipment(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 7297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7303, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n} "],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAGA;AAFA;AACA;AAAA;AAAA;AAJA;;;;;;AAOA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,mKAAgB,IAAI;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,qCAAuB,sMAAM,UAAU,CAG3C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,cAAc;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAGzB,qBAAqB,WAAW,GAAG,mKAAgB,cAAc,CAAC,WAAW;AAE7E,MAAM,uCAAyB,sMAAM,UAAU,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,gBAAgB;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;AAG3B,uBAAuB,WAAW,GAChC,mKAAgB,gBAAgB,CAAC,WAAW;AAE9C,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,mKAAgB,MAAM;kBACrB,cAAA,8OAAC,mKAAgB,OAAO;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,mKAAgB,QAAQ;oBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mKAAgB,aAAa;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,8OAAC,mKAAgB,QAAQ;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW;AAEzD,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,SAAS;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG,mKAAgB,SAAS,CAAC,WAAW"}},
    {"offset": {"line": 7489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7495, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/raw-space-office.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { RENTAL_PLANS, RawSpaceOfficeFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  areaDetails: z.array(z.object({\n    area: z.number().min(1, 'Area must be greater than 0'),\n    type: z.enum(['Covered', 'Uncovered']),\n    furnishing: z.enum(['Furnished', 'Not Furnished']),\n    customisation: z.enum(['Open to Customisation', 'Cannot be Customised']),\n  })).min(1, 'At least one area detail is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\ninterface AreaDetail {\n  area: number\n  type: 'Covered' | 'Uncovered'\n  furnishing: 'Furnished' | 'Not Furnished'\n  customisation: 'Open to Customisation' | 'Cannot be Customised'\n}\n\nexport function RawSpaceOfficeForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [areaDetails, setAreaDetails] = useState<AreaDetail[]>([{\n    area: 0,\n    type: 'Covered',\n    furnishing: 'Not Furnished',\n    customisation: 'Open to Customisation'\n  }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      areaDetails: [{\n        area: 0,\n        type: 'Covered',\n        furnishing: 'Not Furnished',\n        customisation: 'Open to Customisation',\n      }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const selectedRentalPlans = form.watch('selectedRentalPlans') || []\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addAreaDetail = () => {\n    setAreaDetails([...areaDetails, {\n      area: 0,\n      type: 'Covered',\n      furnishing: 'Not Furnished',\n      customisation: 'Open to Customisation',\n    }])\n    const currentAreaDetails = form.getValues('areaDetails')\n    form.setValue('areaDetails', [...currentAreaDetails, {\n      area: 0,\n      type: 'Covered',\n      furnishing: 'Not Furnished',\n      customisation: 'Open to Customisation',\n    }])\n  }\n\n  const removeAreaDetail = (index: number) => {\n    const newAreaDetails = areaDetails.filter((_, i) => i !== index)\n    setAreaDetails(newAreaDetails)\n    const currentAreaDetails = form.getValues('areaDetails')\n    form.setValue('areaDetails', currentAreaDetails.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    console.log('Form submission started - Raw Space Office Form')\n    console.log('Form values:', values)\n    \n    try {\n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate area details\n      const validAreaDetails = values.areaDetails.filter(area => \n        area.area > 0 && \n        area.type && \n        area.furnishing && \n        area.customisation\n      )\n\n      if (validAreaDetails.length === 0) {\n        console.log('Validation failed: No valid area details')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one area detail with all fields filled'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'raw-space-office',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        areaDetails: validAreaDetails.map(area => ({\n          area: Number(area.area),\n          type: area.type,\n          furnishing: area.furnishing,\n          customisation: area.customisation\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setAreaDetails([{\n        area: 0,\n        type: 'Covered',\n        furnishing: 'Not Furnished',\n        customisation: 'Open to Customisation'\n      }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Facility Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description *</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images *</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>If available, kindly attach Video Link for your Facility</FormLabel>\n              <FormControl>\n                <Input type=\"url\" placeholder=\"Google Drive / Youtube link\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {selectedRentalPlans.includes('Annual') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerYear\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Year (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Monthly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerMonth\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Month (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('Weekly') && (\n            <FormField\n              control={form.control}\n              name=\"rentPerWeek\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Rent per Week (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          {selectedRentalPlans.includes('One Day (24 Hours)') && (\n            <FormField\n              control={form.control}\n              name=\"dayPassRent\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Day Pass Rent (1 Day) (in Rupees) *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      {...field} \n                      onChange={e => {\n                        const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                        field.onChange(value)\n                      }} \n                      value={field.value || ''}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Area Details *</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addAreaDetail}\n            >\n              Add Area\n            </Button>\n          </div>\n          {areaDetails.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.area`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Area (sq ft) *</FormLabel>\n                    <FormControl>\n                      <Input \n                        type=\"number\" \n                        min={0}\n                        {...field} \n                        onChange={e => {\n                          const value = e.target.value === '' ? 0 : Math.max(0, Number(e.target.value))\n                          field.onChange(value)\n                        }}\n                        value={field.value || ''}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.type`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Type *</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select type\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Covered\">Covered</SelectItem>\n                        <SelectItem value=\"Uncovered\">Uncovered</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.furnishing`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Furnishing *</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select furnishing\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Furnished\">Furnished</SelectItem>\n                        <SelectItem value=\"Not Furnished\">Not Furnished</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.customisation`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Customisation *</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select customisation\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Open to Customisation\">Open to Customisation</SelectItem>\n                        <SelectItem value=\"Cannot be Customised\">Cannot be Customised</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {index > 0 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeAreaDetail(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 8599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8605, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-types/raw-space-lab.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { ImageUpload } from '@/components/ui/image-upload'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { RENTAL_PLANS, RawSpaceLabFields, FacilityFormProps } from '../types'\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  description: z.string().min(1, 'Description is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  videoLink: z.string().optional(),\n  selectedRentalPlans: z.array(z.enum(RENTAL_PLANS)).min(1, 'At least one rental plan is required'),\n  areaDetails: z.array(z.object({\n    area: z.number().min(1, 'Area must be greater than 0'),\n    type: z.enum(['Covered', 'Uncovered']),\n    furnishing: z.enum(['Furnished', 'Not Furnished']),\n    customisation: z.enum(['Open to Customisation', 'Cannot be Customised']),\n  })).min(1, 'At least one area detail is required'),\n  rentPerYear: z.number().optional(),\n  rentPerMonth: z.number().optional(),\n  rentPerWeek: z.number().optional(),\n  dayPassRent: z.number().optional(),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\ninterface AreaDetail {\n  area: number\n  type: 'Covered' | 'Uncovered'\n  furnishing: 'Furnished' | 'Not Furnished'\n  customisation: 'Open to Customisation' | 'Cannot be Customised'\n}\n\nexport function RawSpaceLabForm({ onSubmit, onChange }: FacilityFormProps) {\n  const [images, setImages] = useState<string[]>([])\n  const [areaDetails, setAreaDetails] = useState<AreaDetail[]>([{\n    area: 0,\n    type: 'Covered',\n    furnishing: 'Not Furnished',\n    customisation: 'Open to Customisation'\n  }])\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      images: [],\n      videoLink: '',\n      selectedRentalPlans: [],\n      areaDetails: [{\n        area: 0,\n        type: 'Covered',\n        furnishing: 'Not Furnished',\n        customisation: 'Open to Customisation',\n      }],\n      rentPerYear: undefined,\n      rentPerMonth: undefined,\n      rentPerWeek: undefined,\n      dayPassRent: undefined,\n    },\n  })\n\n  const handleImageUpload = (newImages: string[]) => {\n    setImages(newImages)\n    form.setValue('images', newImages)\n    onChange?.()\n  }\n\n  const addAreaDetail = () => {\n    setAreaDetails([...areaDetails, {\n      area: 0,\n      type: 'Covered',\n      furnishing: 'Not Furnished',\n      customisation: 'Open to Customisation',\n    }])\n    const currentAreaDetails = form.getValues('areaDetails')\n    form.setValue('areaDetails', [...currentAreaDetails, {\n      area: 0,\n      type: 'Covered',\n      furnishing: 'Not Furnished',\n      customisation: 'Open to Customisation',\n    }])\n  }\n\n  const removeAreaDetail = (index: number) => {\n    const newAreaDetails = areaDetails.filter((_, i) => i !== index)\n    setAreaDetails(newAreaDetails)\n    const currentAreaDetails = form.getValues('areaDetails')\n    form.setValue('areaDetails', currentAreaDetails.filter((_, i) => i !== index))\n  }\n\n  const handleFormSubmit = async (values: FormValues) => {\n    try {\n      console.log('Form submission started - Raw Space Lab Form')\n      console.log('Form values:', values)\n      \n      if (images.length === 0) {\n        console.log('Validation failed: No images uploaded')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please upload at least one image'\n        })\n        return\n      }\n\n      // Validate area details\n      const validAreaDetails = values.areaDetails.filter(area => \n        area.area > 0 && \n        area.type && \n        area.furnishing && \n        area.customisation\n      )\n\n      if (validAreaDetails.length === 0) {\n        console.log('Validation failed: No valid area details')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please add at least one area detail with all fields filled'\n        })\n        return\n      }\n\n      if (!values.selectedRentalPlans.length) {\n        console.log('Validation failed: No rental plans selected')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please select at least one rental plan'\n        })\n        return\n      }\n\n      // Check if rent values are provided for selected rental plans\n      const rentValidation = values.selectedRentalPlans.every(plan => {\n        switch (plan) {\n          case 'Annual':\n            return !!values.rentPerYear\n          case 'Monthly':\n            return !!values.rentPerMonth\n          case 'Weekly':\n            return !!values.rentPerWeek\n          case 'One Day (24 Hours)':\n            return !!values.dayPassRent\n          default:\n            return false\n        }\n      })\n\n      if (!rentValidation) {\n        console.log('Validation failed: Missing rent values for selected plans')\n        form.setError('root', {\n          type: 'manual',\n          message: 'Please provide rent values for all selected rental plans'\n        })\n        return\n      }\n\n      // Prepare final submission data\n      const submissionData = {\n        type: 'raw-space-lab',\n        name: values.name,\n        description: values.description,\n        images,\n        videoLink: values.videoLink || '',\n        areaDetails: validAreaDetails.map(area => ({\n          area: Number(area.area),\n          type: area.type,\n          furnishing: area.furnishing,\n          customisation: area.customisation\n        })),\n        rentalPlans: values.selectedRentalPlans.map(plan => {\n          let price = 0;\n          switch (plan) {\n            case 'Annual':\n              price = values.rentPerYear || 0;\n              break;\n            case 'Monthly':\n              price = values.rentPerMonth || 0;\n              break;\n            case 'Weekly':\n              price = values.rentPerWeek || 0;\n              break;\n            case 'One Day (24 Hours)':\n              price = values.dayPassRent || 0;\n              break;\n          }\n          return {\n            name: plan,\n            price,\n            duration: plan\n          };\n        })\n      }\n\n      console.log('Submitting data:', submissionData)\n      await onSubmit(submissionData)\n      console.log('Form submission successful')\n      \n      // Reset form state\n      form.reset()\n      setImages([])\n      setAreaDetails([{\n        area: 0,\n        type: 'Covered',\n        furnishing: 'Not Furnished',\n        customisation: 'Open to Customisation'\n      }])\n      onChange?.()\n    } catch (error) {\n      console.error('Form submission error:', error)\n      form.setError('root', { \n        type: 'manual',\n        message: 'Failed to submit form. Please try again.'\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Images</FormLabel>\n              <FormControl>\n                <ImageUpload\n                  value={images}\n                  onChange={handleImageUpload}\n                  onRemove={(url) => {\n                    const newImages = images.filter((image) => image !== url)\n                    handleImageUpload(newImages)\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"videoLink\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Video Link (Optional)</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"selectedRentalPlans\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Rental Subscription Plan(s) Available *</FormLabel>\n              <FormControl>\n                <div className=\"space-y-2\">\n                  {RENTAL_PLANS.map((plan) => (\n                    <div key={plan} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        checked={field.value?.includes(plan)}\n                        onCheckedChange={(checked) => {\n                          const updatedPlans = checked\n                            ? [...(field.value || []), plan]\n                            : field.value?.filter((p) => p !== plan) || []\n                          field.onChange(updatedPlans)\n                          \n                          if (!checked) {\n                            switch (plan) {\n                              case 'Annual':\n                                form.setValue('rentPerYear', undefined)\n                                break\n                              case 'Monthly':\n                                form.setValue('rentPerMonth', undefined)\n                                break\n                              case 'Weekly':\n                                form.setValue('rentPerWeek', undefined)\n                                break\n                              case 'One Day (24 Hours)':\n                                form.setValue('dayPassRent', undefined)\n                                break\n                            }\n                          }\n                        }}\n                      />\n                      <label className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                        {plan}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {form.watch('selectedRentalPlans')?.includes('Annual') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerYear\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Yearly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Monthly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerMonth\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Monthly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('Weekly') && (\n          <FormField\n            control={form.control}\n            name=\"rentPerWeek\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Weekly Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {form.watch('selectedRentalPlans')?.includes('One Day (24 Hours)') && (\n          <FormField\n            control={form.control}\n            name=\"dayPassRent\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Day Pass Rent</FormLabel>\n                <FormControl>\n                  <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>Area Details</FormLabel>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addAreaDetail}\n            >\n              Add Area\n            </Button>\n          </div>\n          {areaDetails.map((_, index) => (\n            <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg\">\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.area`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Area (sq ft)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.valueAsNumber)} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.type`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Type</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select type\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Covered\">Covered</SelectItem>\n                        <SelectItem value=\"Uncovered\">Uncovered</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.furnishing`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Furnishing</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select furnishing\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Furnished\">Furnished</SelectItem>\n                        <SelectItem value=\"Not Furnished\">Not Furnished</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`areaDetails.${index}.customisation`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Customisation</FormLabel>\n                    <Select\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select customisation\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Open to Customisation\">Open to Customisation</SelectItem>\n                        <SelectItem value=\"Cannot be Customised\">Cannot be Customised</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {index > 0 && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeAreaDetail(index)}\n                  className=\"mt-2\"\n                >\n                  Remove\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <Button \n            type=\"submit\" \n            className=\"w-full md:w-auto bg-primary hover:bg-primary/90\"\n            disabled={form.formState.isSubmitting}\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <span className=\"mr-2\">Submitting...</span>\n                <span className=\"animate-spin\">⏳</span>\n              </>\n            ) : (\n              'Submit for Approval'\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 9663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9669, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/components/forms/facility-form.tsx"],"sourcesContent":["'use client'\n\nimport { FacilityType, FormData } from './types'\nimport { IndividualCabinForm } from './facility-types/individual-cabin'\nimport { CoworkingSpacesForm } from './facility-types/coworking-spaces'\nimport { MeetingRoomsForm } from './facility-types/meeting-rooms'\nimport { BioAlliedLabsForm } from './facility-types/bio-allied-labs'\nimport { ManufacturingLabsForm } from './facility-types/manufacturing-labs'\nimport { PrototypingLabsForm } from './facility-types/prototyping-labs'\nimport { SoftwareForm } from './facility-types/software'\nimport { SaasAlliedForm } from './facility-types/saas-allied'\nimport { RawSpaceOfficeForm } from './facility-types/raw-space-office'\nimport { RawSpaceLabForm } from './facility-types/raw-space-lab'\n\ninterface FacilityFormProps {\n  type: FacilityType\n  onSubmit: (data: FormData) => void\n  onChange?: () => void\n}\n\nexport function FacilityForm({ type, onSubmit, onChange }: FacilityFormProps) {\n  switch (type) {\n    case 'individual-cabin':\n      return <IndividualCabinForm onSubmit={onSubmit} onChange={onChange} />\n    case 'coworking-spaces':\n      return <CoworkingSpacesForm onSubmit={onSubmit} onChange={onChange} />\n    case 'meeting-rooms':\n      return <MeetingRoomsForm onSubmit={onSubmit} onChange={onChange} />\n    case 'bio-allied-labs':\n      return <BioAlliedLabsForm onSubmit={onSubmit} onChange={onChange} />\n    case 'manufacturing-labs':\n      return <ManufacturingLabsForm onSubmit={onSubmit} onChange={onChange} />\n    case 'prototyping-labs':\n      return <PrototypingLabsForm onSubmit={onSubmit} onChange={onChange} />\n    case 'software':\n      return <SoftwareForm onSubmit={onSubmit} onChange={onChange} />\n    case 'saas-allied':\n      return <SaasAlliedForm onSubmit={onSubmit} onChange={onChange} />\n    case 'raw-space-office':\n      return <RawSpaceOfficeForm onSubmit={onSubmit} onChange={onChange} />\n    case 'raw-space-lab':\n      return <RawSpaceLabForm onSubmit={onSubmit} onChange={onChange} />\n    // Add other form types here as they are implemented\n    default:\n      return <div>Form type not implemented: {type}</div>\n  }\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;AAoBO,SAAS,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAqB;IAC1E,OAAQ;QACN,KAAK;YACH,qBAAO,8OAAC,uKAAA,CAAA,sBAAmB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC5D,KAAK;YACH,qBAAO,8OAAC,uKAAA,CAAA,sBAAmB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC5D,KAAK;YACH,qBAAO,8OAAC,oKAAA,CAAA,mBAAgB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QACzD,KAAK;YACH,qBAAO,8OAAC,yKAAA,CAAA,oBAAiB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC1D,KAAK;YACH,qBAAO,8OAAC,yKAAA,CAAA,wBAAqB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC9D,KAAK;YACH,qBAAO,8OAAC,uKAAA,CAAA,sBAAmB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC5D,KAAK;YACH,qBAAO,8OAAC,4JAAA,CAAA,eAAY;gBAAC,UAAU;gBAAU,UAAU;;;;;;QACrD,KAAK;YACH,qBAAO,8OAAC,kKAAA,CAAA,iBAAc;gBAAC,UAAU;gBAAU,UAAU;;;;;;QACvD,KAAK;YACH,qBAAO,8OAAC,0KAAA,CAAA,qBAAkB;gBAAC,UAAU;gBAAU,UAAU;;;;;;QAC3D,KAAK;YACH,qBAAO,8OAAC,uKAAA,CAAA,kBAAe;gBAAC,UAAU;gBAAU,UAAU;;;;;;QACxD,oDAAoD;QACpD;YACE,qBAAO,8OAAC;;oBAAI;oBAA4B;;;;;;;IAC5C;AACF"}},
    {"offset": {"line": 9801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9807, "column": 0}, "map": {"version":3,"sources":["file:///Users/sam/Developer/cumma/src/app/%28dashboard%29/service-provider/my-facilities/page.tsx"],"sourcesContent":["'use client'\n\nimport { useSession } from 'next-auth/react'\nimport { useEffect, useState } from 'react'\nimport { format } from 'date-fns'\nimport { Pencil, Trash2 } from 'lucide-react'\nimport { useRouter } from 'next/navigation'\nimport Image from 'next/image'\nimport { toast } from 'sonner'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport { Button } from '@/components/ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { FacilityForm } from '@/components/forms/facility-form'\nimport { Skeleton } from '@/components/ui/skeleton'\n\ninterface Facility {\n  _id: string\n  details: {\n    name: string\n    images: string[]\n  }\n  facilityType: string\n  updatedAt: string\n  status: string\n}\n\nexport default function MyFacilities() {\n  const { data: session } = useSession()\n  const router = useRouter()\n  const [facilities, setFacilities] = useState<Facility[]>([])\n  const [loading, setLoading] = useState(true)\n  const [editingFacility, setEditingFacility] = useState<Facility | null>(null)\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false)\n\n  useEffect(() => {\n    fetchFacilities()\n  }, [session])\n\n  const fetchFacilities = async () => {\n    try {\n      const response = await fetch('/api/facilities')\n      const data = await response.json()\n      setFacilities(data)\n    } catch (error) {\n      toast.error('Failed to fetch facilities')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleEdit = (facility: Facility) => {\n    setEditingFacility(facility)\n    setIsEditDialogOpen(true)\n  }\n\n  const handleDelete = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this facility?')) return\n\n    try {\n      const response = await fetch(`/api/facilities/${id}`, {\n        method: 'DELETE',\n      })\n\n      if (response.ok) {\n        toast.success('Facility deleted successfully')\n        fetchFacilities()\n      } else {\n        throw new Error('Failed to delete facility')\n      }\n    } catch (error) {\n      toast.error('Failed to delete facility')\n    }\n  }\n\n  const handleEditSubmit = async (formData: any) => {\n    if (!editingFacility) return\n\n    try {\n      const response = await fetch(`/api/facilities/${editingFacility._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...formData,\n          status: 'pending', // Change status to pending after edit\n        }),\n      })\n\n      if (response.ok) {\n        toast.success('Facility updated successfully')\n        setIsEditDialogOpen(false)\n        fetchFacilities()\n      } else {\n        throw new Error('Failed to update facility')\n      }\n    } catch (error) {\n      toast.error('Failed to update facility')\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-2xl font-semibold\">My Facilities & Services</h1>\n          <p className=\"mt-2 text-sm text-muted-foreground\">\n            Manage your facilities and services\n          </p>\n        </div>\n        <div className=\"space-y-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"flex items-center space-x-4\">\n              <Skeleton className=\"h-12 w-12\" />\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-[250px]\" />\n                <Skeleton className=\"h-4 w-[200px]\" />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-semibold\">My Facilities & Services</h1>\n        <p className=\"mt-2 text-sm text-muted-foreground\">\n          Manage your facilities and services\n        </p>\n      </div>\n\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Facility Title</TableHead>\n              <TableHead>Date Published</TableHead>\n              <TableHead>Status</TableHead>\n              <TableHead className=\"text-right\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {facilities.map((facility) => (\n              <TableRow key={facility._id}>\n                <TableCell className=\"font-medium\">\n                  <div className=\"flex items-center space-x-4\">\n                    {facility.details.images?.[0] && (\n                      <Image\n                        src={facility.details.images[0]}\n                        alt={facility.details.name}\n                        width={48}\n                        height={48}\n                        className=\"rounded-md object-cover\"\n                      />\n                    )}\n                    <div>\n                      <p className=\"font-medium\">{facility.details.name}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {facility.facilityType}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  {format(new Date(facility.updatedAt), 'dd.MM.yyyy')}\n                </TableCell>\n                <TableCell>\n                  <div className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium ${\n                    facility.status === 'active'\n                      ? 'bg-green-100 text-green-800'\n                      : facility.status === 'pending'\n                      ? 'bg-yellow-100 text-yellow-800'\n                      : 'bg-gray-100 text-gray-800'\n                  }`}>\n                    {facility.status.charAt(0).toUpperCase() + facility.status.slice(1)}\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-right\">\n                  <div className=\"flex justify-end space-x-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"icon\"\n                      onClick={() => handleEdit(facility)}\n                    >\n                      <Pencil className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"icon\"\n                      onClick={() => handleDelete(facility._id)}\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-3xl\">\n          <DialogHeader>\n            <DialogTitle>Edit Facility</DialogTitle>\n          </DialogHeader>\n          {editingFacility && (\n            <FacilityForm\n              type={editingFacility.facilityType}\n              initialData={editingFacility.details}\n              onSubmit={handleEditSubmit}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 10267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}