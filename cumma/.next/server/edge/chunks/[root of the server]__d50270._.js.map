{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { getToken } from 'next-auth/jwt'\nimport { withAuth } from 'next-auth/middleware'\n\nexport default withAuth(\n  async function middleware(req) {\n    const token = await getToken({ req })\n    const isAuth = !!token\n    const isAuthPage = req.nextUrl.pathname.startsWith('/sign-in') ||\n                      req.nextUrl.pathname.startsWith('/sign-up')\n\n    if (isAuthPage) {\n      if (isAuth) {\n        return NextResponse.redirect(new URL(\n          token.userType === 'startup' ? '/startup/dashboard' : '/service-provider/dashboard',\n          req.url\n        ))\n      }\n      return null\n    }\n\n    if (!isAuth) {\n      let from = req.nextUrl.pathname;\n      if (req.nextUrl.search) {\n        from += req.nextUrl.search;\n      }\n\n      return NextResponse.redirect(\n        new URL(`/sign-in?from=${encodeURIComponent(from)}`, req.url)\n      );\n    }\n\n    // Handle route protection based on user type\n    if (token.userType === 'startup' && req.nextUrl.pathname.startsWith('/service-provider')) {\n      return NextResponse.redirect(new URL('/startup/dashboard', req.url))\n    }\n\n    if (token.userType === 'Service Provider' && req.nextUrl.pathname.startsWith('/startup')) {\n      return NextResponse.redirect(new URL('/service-provider/dashboard', req.url))\n    }\n\n    // Allow access to protected routes\n    return null\n  },\n  {\n    callbacks: {\n      authorized: () => true\n    },\n  }\n)\n\n// Protect specific routes\nexport const config = {\n  matcher: [\n    '/startup/:path*',\n    '/service-provider/:path*',\n    '/sign-in',\n    '/sign-up',\n    '/auth/complete-profile'\n  ]\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;;;;uCAIe,CAAA,GAAA,0IAAA,CAAA,WAAQ,AAAD,EACpB,eAAe,WAAW,GAAG;IAC3B,MAAM,QAAQ,MAAM,CAAA,GAAA,4IAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;IAAI;IACnC,MAAM,SAAS,CAAC,CAAC;IACjB,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,eACjC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAElD,IAAI,YAAY;QACd,IAAI,QAAQ;YACV,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAC/B,MAAM,QAAQ,KAAK,YAAY,uBAAuB,+BACtD,IAAI,GAAG;QAEX;QACA,OAAO;IACT;IAEA,IAAI,CAAC,QAAQ;QACX,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ;QAC/B,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;YACtB,QAAQ,IAAI,OAAO,CAAC,MAAM;QAC5B;QAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,CAAC,cAAc,EAAE,mBAAmB,OAAO,EAAE,IAAI,GAAG;IAEhE;IAEA,6CAA6C;IAC7C,IAAI,MAAM,QAAQ,KAAK,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,sBAAsB;QACxF,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,sBAAsB,IAAI,GAAG;IACpE;IAEA,IAAI,MAAM,QAAQ,KAAK,sBAAsB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa;QACxF,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,+BAA+B,IAAI,GAAG;IAC7E;IAEA,mCAAmC;IACnC,OAAO;AACT,GACA;IACE,WAAW;QACT,YAAY,IAAM;IACpB;AACF;AAIK,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}